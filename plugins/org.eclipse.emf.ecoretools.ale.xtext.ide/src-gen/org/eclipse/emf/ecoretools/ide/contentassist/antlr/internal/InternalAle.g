/*******************************************************************************
 * Copyright (c) 2017 Inria and Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Inria - initial API and implementation
 *
 * generated by Xtext 2.14.0
 *******************************************************************************/
grammar InternalAle;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.eclipse.emf.ecoretools.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.emf.ecoretools.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.emf.ecoretools.services.AleGrammarAccess;

}
@parser::members {
	private AleGrammarAccess grammarAccess;

	public void setGrammarAccess(AleGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulerRoot
entryRulerRoot
:
{ before(grammarAccess.getRRootRule()); }
	 rulerRoot
{ after(grammarAccess.getRRootRule()); } 
	 EOF 
;

// Rule rRoot
rulerRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRRootAccess().getGroup()); }
		(rule__RRoot__Group__0)
		{ after(grammarAccess.getRRootAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerImport
entryRulerImport
:
{ before(grammarAccess.getRImportRule()); }
	 rulerImport
{ after(grammarAccess.getRImportRule()); } 
	 EOF 
;

// Rule rImport
rulerImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRImportAccess().getGroup()); }
		(rule__RImport__Group__0)
		{ after(grammarAccess.getRImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerService
entryRulerService
:
{ before(grammarAccess.getRServiceRule()); }
	 rulerService
{ after(grammarAccess.getRServiceRule()); } 
	 EOF 
;

// Rule rService
rulerService 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRServiceAccess().getGroup()); }
		(rule__RService__Group__0)
		{ after(grammarAccess.getRServiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerClass
entryRulerClass
:
{ before(grammarAccess.getRClassRule()); }
	 rulerClass
{ after(grammarAccess.getRClassRule()); } 
	 EOF 
;

// Rule rClass
rulerClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRClassAccess().getAlternatives()); }
		(rule__RClass__Alternatives)
		{ after(grammarAccess.getRClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerOpenClass
entryRulerOpenClass
:
{ before(grammarAccess.getROpenClassRule()); }
	 rulerOpenClass
{ after(grammarAccess.getROpenClassRule()); } 
	 EOF 
;

// Rule rOpenClass
rulerOpenClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getROpenClassAccess().getGroup()); }
		(rule__ROpenClass__Group__0)
		{ after(grammarAccess.getROpenClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerNewClass
entryRulerNewClass
:
{ before(grammarAccess.getRNewClassRule()); }
	 rulerNewClass
{ after(grammarAccess.getRNewClassRule()); } 
	 EOF 
;

// Rule rNewClass
rulerNewClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRNewClassAccess().getGroup()); }
		(rule__RNewClass__Group__0)
		{ after(grammarAccess.getRNewClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerOperation
entryRulerOperation
:
{ before(grammarAccess.getROperationRule()); }
	 rulerOperation
{ after(grammarAccess.getROperationRule()); } 
	 EOF 
;

// Rule rOperation
rulerOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getROperationAccess().getGroup()); }
		(rule__ROperation__Group__0)
		{ after(grammarAccess.getROperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerTag
entryRulerTag
:
{ before(grammarAccess.getRTagRule()); }
	 rulerTag
{ after(grammarAccess.getRTagRule()); } 
	 EOF 
;

// Rule rTag
rulerTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRTagAccess().getGroup()); }
		(rule__RTag__Group__0)
		{ after(grammarAccess.getRTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerVariable
entryRulerVariable
:
{ before(grammarAccess.getRVariableRule()); }
	 rulerVariable
{ after(grammarAccess.getRVariableRule()); } 
	 EOF 
;

// Rule rVariable
rulerVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRVariableAccess().getGroup()); }
		(rule__RVariable__Group__0)
		{ after(grammarAccess.getRVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerAttribute
entryRulerAttribute
:
{ before(grammarAccess.getRAttributeRule()); }
	 rulerAttribute
{ after(grammarAccess.getRAttributeRule()); } 
	 EOF 
;

// Rule rAttribute
rulerAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRAttributeAccess().getGroup()); }
		(rule__RAttribute__Group__0)
		{ after(grammarAccess.getRAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerCardinality
entryRulerCardinality
:
{ before(grammarAccess.getRCardinalityRule()); }
	 rulerCardinality
{ after(grammarAccess.getRCardinalityRule()); } 
	 EOF 
;

// Rule rCardinality
rulerCardinality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRCardinalityAccess().getGroup()); }
		(rule__RCardinality__Group__0)
		{ after(grammarAccess.getRCardinalityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerOpposite
entryRulerOpposite
:
{ before(grammarAccess.getROppositeRule()); }
	 rulerOpposite
{ after(grammarAccess.getROppositeRule()); } 
	 EOF 
;

// Rule rOpposite
rulerOpposite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getROppositeAccess().getGroup()); }
		(rule__ROpposite__Group__0)
		{ after(grammarAccess.getROppositeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerSimpleStatement
entryRulerSimpleStatement
:
{ before(grammarAccess.getRSimpleStatementRule()); }
	 rulerSimpleStatement
{ after(grammarAccess.getRSimpleStatementRule()); } 
	 EOF 
;

// Rule rSimpleStatement
rulerSimpleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRSimpleStatementAccess().getAlternatives()); }
		(rule__RSimpleStatement__Alternatives)
		{ after(grammarAccess.getRSimpleStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerBlockStatement
entryRulerBlockStatement
:
{ before(grammarAccess.getRBlockStatementRule()); }
	 rulerBlockStatement
{ after(grammarAccess.getRBlockStatementRule()); } 
	 EOF 
;

// Rule rBlockStatement
rulerBlockStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRBlockStatementAccess().getAlternatives()); }
		(rule__RBlockStatement__Alternatives)
		{ after(grammarAccess.getRBlockStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerVarDecl
entryRulerVarDecl
:
{ before(grammarAccess.getRVarDeclRule()); }
	 rulerVarDecl
{ after(grammarAccess.getRVarDeclRule()); } 
	 EOF 
;

// Rule rVarDecl
rulerVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRVarDeclAccess().getGroup()); }
		(rule__RVarDecl__Group__0)
		{ after(grammarAccess.getRVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerAssign
entryRulerAssign
:
{ before(grammarAccess.getRAssignRule()); }
	 rulerAssign
{ after(grammarAccess.getRAssignRule()); } 
	 EOF 
;

// Rule rAssign
rulerAssign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRAssignAccess().getGroup()); }
		(rule__RAssign__Group__0)
		{ after(grammarAccess.getRAssignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerInsert
entryRulerInsert
:
{ before(grammarAccess.getRInsertRule()); }
	 rulerInsert
{ after(grammarAccess.getRInsertRule()); } 
	 EOF 
;

// Rule rInsert
rulerInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRInsertAccess().getGroup()); }
		(rule__RInsert__Group__0)
		{ after(grammarAccess.getRInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerRemove
entryRulerRemove
:
{ before(grammarAccess.getRRemoveRule()); }
	 rulerRemove
{ after(grammarAccess.getRRemoveRule()); } 
	 EOF 
;

// Rule rRemove
rulerRemove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRRemoveAccess().getGroup()); }
		(rule__RRemove__Group__0)
		{ after(grammarAccess.getRRemoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerForEach
entryRulerForEach
:
{ before(grammarAccess.getRForEachRule()); }
	 rulerForEach
{ after(grammarAccess.getRForEachRule()); } 
	 EOF 
;

// Rule rForEach
rulerForEach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRForEachAccess().getGroup()); }
		(rule__RForEach__Group__0)
		{ after(grammarAccess.getRForEachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerCollection
entryRulerCollection
:
{ before(grammarAccess.getRCollectionRule()); }
	 rulerCollection
{ after(grammarAccess.getRCollectionRule()); } 
	 EOF 
;

// Rule rCollection
rulerCollection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRCollectionAccess().getAlternatives()); }
		(rule__RCollection__Alternatives)
		{ after(grammarAccess.getRCollectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerBlock
entryRulerBlock
:
{ before(grammarAccess.getRBlockRule()); }
	 rulerBlock
{ after(grammarAccess.getRBlockRule()); } 
	 EOF 
;

// Rule rBlock
rulerBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRBlockAccess().getGroup()); }
		(rule__RBlock__Group__0)
		{ after(grammarAccess.getRBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerIf
entryRulerIf
:
{ before(grammarAccess.getRIfRule()); }
	 rulerIf
{ after(grammarAccess.getRIfRule()); } 
	 EOF 
;

// Rule rIf
rulerIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRIfAccess().getGroup()); }
		(rule__RIf__Group__0)
		{ after(grammarAccess.getRIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerWhile
entryRulerWhile
:
{ before(grammarAccess.getRWhileRule()); }
	 rulerWhile
{ after(grammarAccess.getRWhileRule()); } 
	 EOF 
;

// Rule rWhile
rulerWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRWhileAccess().getGroup()); }
		(rule__RWhile__Group__0)
		{ after(grammarAccess.getRWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerSwitch
entryRulerSwitch
:
{ before(grammarAccess.getRSwitchRule()); }
	 rulerSwitch
{ after(grammarAccess.getRSwitchRule()); } 
	 EOF 
;

// Rule rSwitch
rulerSwitch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRSwitchAccess().getGroup()); }
		(rule__RSwitch__Group__0)
		{ after(grammarAccess.getRSwitchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerCase
entryRulerCase
:
{ before(grammarAccess.getRCaseRule()); }
	 rulerCase
{ after(grammarAccess.getRCaseRule()); } 
	 EOF 
;

// Rule rCase
rulerCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRCaseAccess().getGroup()); }
		(rule__RCase__Group__0)
		{ after(grammarAccess.getRCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerExpression
entryRulerExpression
:
{ before(grammarAccess.getRExpressionRule()); }
	 rulerExpression
{ after(grammarAccess.getRExpressionRule()); } 
	 EOF 
;

// Rule rExpression
rulerExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRExpressionAccess().getExpAssignment()); }
		(rule__RExpression__ExpAssignment)
		{ after(grammarAccess.getRExpressionAccess().getExpAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenonLeftRecExpression
entryRulenonLeftRecExpression
:
{ before(grammarAccess.getNonLeftRecExpressionRule()); }
	 rulenonLeftRecExpression
{ after(grammarAccess.getNonLeftRecExpressionRule()); } 
	 EOF 
;

// Rule nonLeftRecExpression
rulenonLeftRecExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getAlternatives()); }
		(rule__NonLeftRecExpression__Alternatives)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebinding
entryRulebinding
:
{ before(grammarAccess.getBindingRule()); }
	 rulebinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule binding
rulebinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingAccess().getGroup()); }
		(rule__Binding__Group__0)
		{ after(grammarAccess.getBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleaddOp
entryRuleaddOp
:
{ before(grammarAccess.getAddOpRule()); }
	 ruleaddOp
{ after(grammarAccess.getAddOpRule()); } 
	 EOF 
;

// Rule addOp
ruleaddOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOpAccess().getAlternatives()); }
		(rule__AddOp__Alternatives)
		{ after(grammarAccess.getAddOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompOp
entryRulecompOp
:
{ before(grammarAccess.getCompOpRule()); }
	 rulecompOp
{ after(grammarAccess.getCompOpRule()); } 
	 EOF 
;

// Rule compOp
rulecompOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompOpAccess().getAlternatives()); }
		(rule__CompOp__Alternatives)
		{ after(grammarAccess.getCompOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecollectionIterator
entryRulecollectionIterator
:
{ before(grammarAccess.getCollectionIteratorRule()); }
	 rulecollectionIterator
{ after(grammarAccess.getCollectionIteratorRule()); } 
	 EOF 
;

// Rule collectionIterator
rulecollectionIterator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getAlternatives()); }
		(rule__CollectionIterator__Alternatives)
		{ after(grammarAccess.getCollectionIteratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteral
entryRuleliteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleliteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule literal
ruleliteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeLiteral
entryRuletypeLiteral
:
{ before(grammarAccess.getTypeLiteralRule()); }
	 ruletypeLiteral
{ after(grammarAccess.getTypeLiteralRule()); } 
	 EOF 
;

// Rule typeLiteral
ruletypeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
		(rule__TypeLiteral__Alternatives)
		{ after(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleclassifierTypeRule
entryRuleclassifierTypeRule
:
{ before(grammarAccess.getClassifierTypeRuleRule()); }
	 ruleclassifierTypeRule
{ after(grammarAccess.getClassifierTypeRuleRule()); } 
	 EOF 
;

// Rule classifierTypeRule
ruleclassifierTypeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierTypeRuleAccess().getGroup()); }
		(rule__ClassifierTypeRule__Group__0)
		{ after(grammarAccess.getClassifierTypeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerType
entryRulerType
:
{ before(grammarAccess.getRTypeRule()); }
	 rulerType
{ after(grammarAccess.getRTypeRule()); } 
	 EOF 
;

// Rule rType
rulerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRTypeAccess().getAlternatives()); }
		(rule__RType__Alternatives)
		{ after(grammarAccess.getRTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerQIdent
entryRulerQIdent
:
{ before(grammarAccess.getRQIdentRule()); }
	 rulerQIdent
{ after(grammarAccess.getRQIdentRule()); } 
	 EOF 
;

// Rule rQIdent
rulerQIdent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRQIdentAccess().getGroup()); }
		(rule__RQIdent__Group__0)
		{ after(grammarAccess.getRQIdentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerQualified
entryRulerQualified
:
{ before(grammarAccess.getRQualifiedRule()); }
	 rulerQualified
{ after(grammarAccess.getRQualifiedRule()); } 
	 EOF 
;

// Rule rQualified
rulerQualified 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRQualifiedAccess().getGroup()); }
		(rule__RQualified__Group__0)
		{ after(grammarAccess.getRQualifiedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RClass__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRClassAccess().getROpenClassParserRuleCall_0()); }
		rulerOpenClass
		{ after(grammarAccess.getRClassAccess().getROpenClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRClassAccess().getRNewClassParserRuleCall_1()); }
		rulerNewClass
		{ after(grammarAccess.getRClassAccess().getRNewClassParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getDefKeyword_1_0()); }
		'def'
		{ after(grammarAccess.getROperationAccess().getDefKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getROperationAccess().getOverrideKeyword_1_1()); }
		'override'
		{ after(grammarAccess.getROperationAccess().getOverrideKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__ModifierAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getModifierContainsKeyword_0_0_0()); }
		'contains'
		{ after(grammarAccess.getRAttributeAccess().getModifierContainsKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRAttributeAccess().getModifierUniqueKeyword_0_0_1()); }
		'unique'
		{ after(grammarAccess.getRAttributeAccess().getModifierUniqueKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCardinality__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCardinalityAccess().getINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRCardinalityAccess().getINTTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRCardinalityAccess().getMultOpTerminalRuleCall_2_1()); }
		RULE_MULTOP
		{ after(grammarAccess.getRCardinalityAccess().getMultOpTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSimpleStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRSimpleStatementAccess().getRVarDeclParserRuleCall_0()); }
		rulerVarDecl
		{ after(grammarAccess.getRSimpleStatementAccess().getRVarDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRSimpleStatementAccess().getRAssignParserRuleCall_1()); }
		rulerAssign
		{ after(grammarAccess.getRSimpleStatementAccess().getRAssignParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRSimpleStatementAccess().getRInsertParserRuleCall_2()); }
		rulerInsert
		{ after(grammarAccess.getRSimpleStatementAccess().getRInsertParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRSimpleStatementAccess().getRRemoveParserRuleCall_3()); }
		rulerRemove
		{ after(grammarAccess.getRSimpleStatementAccess().getRRemoveParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRSimpleStatementAccess().getRExpressionParserRuleCall_4()); }
		rulerExpression
		{ after(grammarAccess.getRSimpleStatementAccess().getRExpressionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlockStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockStatementAccess().getRForEachParserRuleCall_0()); }
		rulerForEach
		{ after(grammarAccess.getRBlockStatementAccess().getRForEachParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRBlockStatementAccess().getRWhileParserRuleCall_1()); }
		rulerWhile
		{ after(grammarAccess.getRBlockStatementAccess().getRWhileParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRBlockStatementAccess().getRIfParserRuleCall_2()); }
		rulerIf
		{ after(grammarAccess.getRBlockStatementAccess().getRIfParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCollectionAccess().getGroup_0()); }
		(rule__RCollection__Group_0__0)
		{ after(grammarAccess.getRCollectionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRCollectionAccess().getExpAssignment_1()); }
		(rule__RCollection__ExpAssignment_1)
		{ after(grammarAccess.getRCollectionAccess().getExpAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockAccess().getGroup_2_0_0()); }
		(rule__RBlock__Group_2_0_0__0)
		{ after(grammarAccess.getRBlockAccess().getGroup_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRBlockAccess().getStatementsAssignment_2_0_1()); }
		(rule__RBlock__StatementsAssignment_2_0_1)
		{ after(grammarAccess.getRBlockAccess().getStatementsAssignment_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockAccess().getGroup_2_1_0()); }
		(rule__RBlock__Group_2_1_0__0)
		{ after(grammarAccess.getRBlockAccess().getGroup_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRBlockAccess().getStatementsAssignment_2_1_1()); }
		(rule__RBlock__StatementsAssignment_2_1_1)
		{ after(grammarAccess.getRBlockAccess().getStatementsAssignment_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRIfAccess().getElseAssignment_5_1_0()); }
		(rule__RIf__ElseAssignment_5_1_0)
		{ after(grammarAccess.getRIfAccess().getElseAssignment_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRIfAccess().getNestedIfAssignment_5_1_1()); }
		(rule__RIf__NestedIfAssignment_5_1_1)
		{ after(grammarAccess.getRIfAccess().getNestedIfAssignment_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RExpression__ExpAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRExpressionAccess().getExpRSwitchParserRuleCall_0_0()); }
		rulerSwitch
		{ after(grammarAccess.getRExpressionAccess().getExpRSwitchParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRExpressionAccess().getExpExpressionParserRuleCall_0_1()); }
		ruleexpression
		{ after(grammarAccess.getRExpressionAccess().getExpExpressionParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_0()); }
		(rule__Expression__Group_1_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_1()); }
		(rule__Expression__Group_1_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_2()); }
		(rule__Expression__Group_1_2__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_3()); }
		(rule__Expression__Group_1_3__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_4()); }
		(rule__Expression__Group_1_4__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_5()); }
		(rule__Expression__Group_1_5__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_6()); }
		(rule__Expression__Group_1_6__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_7()); }
		(rule__Expression__Group_1_7__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_8()); }
		(rule__Expression__Group_1_8__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_9()); }
		(rule__Expression__Group_1_9__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_2_2_0()); }
		(rule__Expression__Group_1_2_2_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_2_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1_2_2_1()); }
		(rule__Expression__Group_1_2_2_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1_2_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_0()); }
		(rule__NonLeftRecExpression__Group_0__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_1()); }
		(rule__NonLeftRecExpression__Group_1__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_2()); }
		(rule__NonLeftRecExpression__Group_2__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_3()); }
		(rule__NonLeftRecExpression__Group_3__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_4()); }
		(rule__NonLeftRecExpression__Group_4__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_5()); }
		(rule__NonLeftRecExpression__Group_5__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_6()); }
		(rule__NonLeftRecExpression__Group_6__0)
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOpAccess().getLessThanSignEqualsSignKeyword_0()); }
		'<='
		{ after(grammarAccess.getCompOpAccess().getLessThanSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getGreaterThanSignEqualsSignKeyword_1()); }
		'>='
		{ after(grammarAccess.getCompOpAccess().getGreaterThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getExclamationMarkEqualsSignKeyword_2()); }
		'!='
		{ after(grammarAccess.getCompOpAccess().getExclamationMarkEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getLessThanSignGreaterThanSignKeyword_3()); }
		'<>'
		{ after(grammarAccess.getCompOpAccess().getLessThanSignGreaterThanSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getEqualsSignKeyword_4()); }
		'='
		{ after(grammarAccess.getCompOpAccess().getEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getEqualsSignEqualsSignKeyword_5()); }
		'=='
		{ after(grammarAccess.getCompOpAccess().getEqualsSignEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getLessThanSignKeyword_6()); }
		'<'
		{ after(grammarAccess.getCompOpAccess().getLessThanSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getGreaterThanSignKeyword_7()); }
		'>'
		{ after(grammarAccess.getCompOpAccess().getGreaterThanSignKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionIterator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getSelectKeyword_0()); }
		'select'
		{ after(grammarAccess.getCollectionIteratorAccess().getSelectKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getRejectKeyword_1()); }
		'reject'
		{ after(grammarAccess.getCollectionIteratorAccess().getRejectKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getCollectKeyword_2()); }
		'collect'
		{ after(grammarAccess.getCollectionIteratorAccess().getCollectKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getAnyKeyword_3()); }
		'any'
		{ after(grammarAccess.getCollectionIteratorAccess().getAnyKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getExistsKeyword_4()); }
		'exists'
		{ after(grammarAccess.getCollectionIteratorAccess().getExistsKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getForAllKeyword_5()); }
		'forAll'
		{ after(grammarAccess.getCollectionIteratorAccess().getForAllKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getIsUniqueKeyword_6()); }
		'isUnique'
		{ after(grammarAccess.getCollectionIteratorAccess().getIsUniqueKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getOneKeyword_7()); }
		'one'
		{ after(grammarAccess.getCollectionIteratorAccess().getOneKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getSortedByKeyword_8()); }
		'sortedBy'
		{ after(grammarAccess.getCollectionIteratorAccess().getSortedByKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionIteratorAccess().getClosureKeyword_9()); }
		'closure'
		{ after(grammarAccess.getCollectionIteratorAccess().getClosureKeyword_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
		(rule__Literal__Group_0__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
		(rule__Literal__Group_1__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
		(rule__Literal__Group_2__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_3()); }
		(rule__Literal__Group_3__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_4()); }
		(rule__Literal__Group_4__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_5()); }
		(rule__Literal__Group_5__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_6()); }
		(rule__Literal__Group_6__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_7()); }
		(rule__Literal__Group_7__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_8()); }
		(rule__Literal__Group_8__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getTypeLiteralParserRuleCall_9()); }
		ruletypeLiteral
		{ after(grammarAccess.getLiteralAccess().getTypeLiteralParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_0()); }
		(rule__TypeLiteral__Group_0__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_1()); }
		(rule__TypeLiteral__Group_1__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_2()); }
		(rule__TypeLiteral__Group_2__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_3()); }
		(rule__TypeLiteral__Group_3__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_4()); }
		(rule__TypeLiteral__Group_4__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_5()); }
		(rule__TypeLiteral__Group_5__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getClassifierTypeRuleParserRuleCall_6()); }
		ruleclassifierTypeRule
		{ after(grammarAccess.getTypeLiteralAccess().getClassifierTypeRuleParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getGroup_7()); }
		(rule__TypeLiteral__Group_7__0)
		{ after(grammarAccess.getTypeLiteralAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRTypeAccess().getTypeLiteralParserRuleCall_0()); }
		ruletypeLiteral
		{ after(grammarAccess.getRTypeAccess().getTypeLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRTypeAccess().getNameAssignment_1()); }
		(rule__RType__NameAssignment_1)
		{ after(grammarAccess.getRTypeAccess().getNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRoot__Group__0__Impl
	rule__RRoot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRootAccess().getBehaviorKeyword_0()); }
	'behavior'
	{ after(grammarAccess.getRRootAccess().getBehaviorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRoot__Group__1__Impl
	rule__RRoot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRootAccess().getNameAssignment_1()); }
	(rule__RRoot__NameAssignment_1)
	{ after(grammarAccess.getRRootAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRoot__Group__2__Impl
	rule__RRoot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRootAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getRRootAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRoot__Group__3__Impl
	rule__RRoot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRootAccess().getImportsAssignment_3()); }
	(rule__RRoot__ImportsAssignment_3)*
	{ after(grammarAccess.getRRootAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRoot__Group__4__Impl
	rule__RRoot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRootAccess().getServicesAssignment_4()); }
	(rule__RRoot__ServicesAssignment_4)*
	{ after(grammarAccess.getRRootAccess().getServicesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRoot__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRootAccess().getXtendedClassesAssignment_5()); }
	(rule__RRoot__XtendedClassesAssignment_5)*
	{ after(grammarAccess.getRRootAccess().getXtendedClassesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RImport__Group__0__Impl
	rule__RImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getRImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RImport__Group__1__Impl
	rule__RImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRImportAccess().getNameAssignment_1()); }
	(rule__RImport__NameAssignment_1)
	{ after(grammarAccess.getRImportAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RImport__Group__2__Impl
	rule__RImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRImportAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getRImportAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RImport__Group__3__Impl
	rule__RImport__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRImportAccess().getAliasAssignment_3()); }
	(rule__RImport__AliasAssignment_3)
	{ after(grammarAccess.getRImportAccess().getAliasAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RImport__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRImportAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRImportAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RService__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RService__Group__0__Impl
	rule__RService__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RService__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRServiceAccess().getUseKeyword_0()); }
	'use'
	{ after(grammarAccess.getRServiceAccess().getUseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RService__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RService__Group__1__Impl
	rule__RService__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RService__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRServiceAccess().getNameAssignment_1()); }
	(rule__RService__NameAssignment_1)
	{ after(grammarAccess.getRServiceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RService__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RService__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RService__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRServiceAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getRServiceAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROpenClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__0__Impl
	rule__ROpenClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getOpenKeyword_0()); }
	'open'
	{ after(grammarAccess.getROpenClassAccess().getOpenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__1__Impl
	rule__ROpenClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getClassKeyword_1()); }
	'class'
	{ after(grammarAccess.getROpenClassAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__2__Impl
	rule__ROpenClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getNameAssignment_2()); }
	(rule__ROpenClass__NameAssignment_2)
	{ after(grammarAccess.getROpenClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__3__Impl
	rule__ROpenClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getGroup_3()); }
	(rule__ROpenClass__Group_3__0)?
	{ after(grammarAccess.getROpenClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__4__Impl
	rule__ROpenClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getROpenClassAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__5__Impl
	rule__ROpenClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getAttributesAssignment_5()); }
	(rule__ROpenClass__AttributesAssignment_5)*
	{ after(grammarAccess.getROpenClassAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__6__Impl
	rule__ROpenClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getOperationsAssignment_6()); }
	(rule__ROpenClass__OperationsAssignment_6)*
	{ after(grammarAccess.getROpenClassAccess().getOperationsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getROpenClassAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROpenClass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group_3__0__Impl
	rule__ROpenClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getROpenClassAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group_3__1__Impl
	rule__ROpenClass__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getExtendsAssignment_3_1()); }
	(rule__ROpenClass__ExtendsAssignment_3_1)
	{ after(grammarAccess.getROpenClassAccess().getExtendsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getGroup_3_2()); }
	(rule__ROpenClass__Group_3_2__0)*
	{ after(grammarAccess.getROpenClassAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROpenClass__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group_3_2__0__Impl
	rule__ROpenClass__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getROpenClassAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpenClass__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROpenClassAccess().getExtendsAssignment_3_2_1()); }
	(rule__ROpenClass__ExtendsAssignment_3_2_1)
	{ after(grammarAccess.getROpenClassAccess().getExtendsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RNewClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNewClass__Group__0__Impl
	rule__RNewClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNewClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getRNewClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNewClass__Group__1__Impl
	rule__RNewClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNewClassAccess().getNameAssignment_1()); }
	(rule__RNewClass__NameAssignment_1)
	{ after(grammarAccess.getRNewClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNewClass__Group__2__Impl
	rule__RNewClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNewClassAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRNewClassAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNewClass__Group__3__Impl
	rule__RNewClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNewClassAccess().getAttributesAssignment_3()); }
	(rule__RNewClass__AttributesAssignment_3)*
	{ after(grammarAccess.getRNewClassAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNewClass__Group__4__Impl
	rule__RNewClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNewClassAccess().getOperationsAssignment_4()); }
	(rule__RNewClass__OperationsAssignment_4)*
	{ after(grammarAccess.getRNewClassAccess().getOperationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RNewClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRNewClassAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRNewClassAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__0__Impl
	rule__ROperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getTagAssignment_0()); }
	(rule__ROperation__TagAssignment_0)*
	{ after(grammarAccess.getROperationAccess().getTagAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__1__Impl
	rule__ROperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getAlternatives_1()); }
	(rule__ROperation__Alternatives_1)
	{ after(grammarAccess.getROperationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__2__Impl
	rule__ROperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getTypeAssignment_2()); }
	(rule__ROperation__TypeAssignment_2)
	{ after(grammarAccess.getROperationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__3__Impl
	rule__ROperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getNameAssignment_3()); }
	(rule__ROperation__NameAssignment_3)
	{ after(grammarAccess.getROperationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__4__Impl
	rule__ROperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getROperationAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__5__Impl
	rule__ROperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getGroup_5()); }
	(rule__ROperation__Group_5__0)?
	{ after(grammarAccess.getROperationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__6__Impl
	rule__ROperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getROperationAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getBodyAssignment_7()); }
	(rule__ROperation__BodyAssignment_7)
	{ after(grammarAccess.getROperationAccess().getBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROperation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group_5__0__Impl
	rule__ROperation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getParamsAssignment_5_0()); }
	(rule__ROperation__ParamsAssignment_5_0)
	{ after(grammarAccess.getROperationAccess().getParamsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getGroup_5_1()); }
	(rule__ROperation__Group_5_1__0)*
	{ after(grammarAccess.getROperationAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROperation__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group_5_1__0__Impl
	rule__ROperation__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getCommaKeyword_5_1_0()); }
	','
	{ after(grammarAccess.getROperationAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROperation__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROperationAccess().getParamsAssignment_5_1_1()); }
	(rule__ROperation__ParamsAssignment_5_1_1)
	{ after(grammarAccess.getROperationAccess().getParamsAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RTag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RTag__Group__0__Impl
	rule__RTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RTag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRTagAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getRTagAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RTag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RTag__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RTag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRTagAccess().getNameAssignment_1()); }
	(rule__RTag__NameAssignment_1)
	{ after(grammarAccess.getRTagAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVariable__Group__0__Impl
	rule__RVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVariableAccess().getTypeAssignment_0()); }
	(rule__RVariable__TypeAssignment_0)
	{ after(grammarAccess.getRVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVariableAccess().getNameAssignment_1()); }
	(rule__RVariable__NameAssignment_1)
	{ after(grammarAccess.getRVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__0__Impl
	rule__RAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getModifierAssignment_0()); }
	(rule__RAttribute__ModifierAssignment_0)?
	{ after(grammarAccess.getRAttributeAccess().getModifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__1__Impl
	rule__RAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getBoundsAssignment_1()); }
	(rule__RAttribute__BoundsAssignment_1)?
	{ after(grammarAccess.getRAttributeAccess().getBoundsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__2__Impl
	rule__RAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getOppositeAssignment_2()); }
	(rule__RAttribute__OppositeAssignment_2)?
	{ after(grammarAccess.getRAttributeAccess().getOppositeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__3__Impl
	rule__RAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getTypeAssignment_3()); }
	(rule__RAttribute__TypeAssignment_3)
	{ after(grammarAccess.getRAttributeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__4__Impl
	rule__RAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getNameAssignment_4()); }
	(rule__RAttribute__NameAssignment_4)
	{ after(grammarAccess.getRAttributeAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__5__Impl
	rule__RAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getGroup_5()); }
	(rule__RAttribute__Group_5__0)?
	{ after(grammarAccess.getRAttributeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getRAttributeAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RAttribute__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group_5__0__Impl
	rule__RAttribute__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getColonEqualsSignKeyword_5_0()); }
	':='
	{ after(grammarAccess.getRAttributeAccess().getColonEqualsSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAttribute__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAttributeAccess().getExpAssignment_5_1()); }
	(rule__RAttribute__ExpAssignment_5_1)
	{ after(grammarAccess.getRAttributeAccess().getExpAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RCardinality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCardinality__Group__0__Impl
	rule__RCardinality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RCardinality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCardinalityAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getRCardinalityAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCardinality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCardinality__Group__1__Impl
	rule__RCardinality__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RCardinality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCardinalityAccess().getFullStopFullStopKeyword_1()); }
	'..'
	{ after(grammarAccess.getRCardinalityAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCardinality__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCardinality__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RCardinality__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCardinalityAccess().getAlternatives_2()); }
	(rule__RCardinality__Alternatives_2)
	{ after(grammarAccess.getRCardinalityAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ROpposite__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpposite__Group__0__Impl
	rule__ROpposite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpposite__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROppositeAccess().getOppositeKeyword_0()); }
	'opposite'
	{ after(grammarAccess.getROppositeAccess().getOppositeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpposite__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ROpposite__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpposite__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getROppositeAccess().getNameAssignment_1()); }
	(rule__ROpposite__NameAssignment_1)
	{ after(grammarAccess.getROppositeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVarDecl__Group__0__Impl
	rule__RVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVarDeclAccess().getTypeAssignment_0()); }
	(rule__RVarDecl__TypeAssignment_0)
	{ after(grammarAccess.getRVarDeclAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVarDecl__Group__1__Impl
	rule__RVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVarDeclAccess().getNameAssignment_1()); }
	(rule__RVarDecl__NameAssignment_1)
	{ after(grammarAccess.getRVarDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVarDeclAccess().getGroup_2()); }
	(rule__RVarDecl__Group_2__0)?
	{ after(grammarAccess.getRVarDeclAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RVarDecl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVarDecl__Group_2__0__Impl
	rule__RVarDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVarDeclAccess().getColonEqualsSignKeyword_2_0()); }
	':='
	{ after(grammarAccess.getRVarDeclAccess().getColonEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RVarDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRVarDeclAccess().getExpAssignment_2_1()); }
	(rule__RVarDecl__ExpAssignment_2_1)
	{ after(grammarAccess.getRVarDeclAccess().getExpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RAssign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAssign__Group__0__Impl
	rule__RAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAssignAccess().getTargetAssignment_0()); }
	(rule__RAssign__TargetAssignment_0)
	{ after(grammarAccess.getRAssignAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAssign__Group__1__Impl
	rule__RAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAssignAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getRAssignAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RAssign__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRAssignAccess().getExpAssignment_2()); }
	(rule__RAssign__ExpAssignment_2)
	{ after(grammarAccess.getRAssignAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RInsert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RInsert__Group__0__Impl
	rule__RInsert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRInsertAccess().getTargetAssignment_0()); }
	(rule__RInsert__TargetAssignment_0)
	{ after(grammarAccess.getRInsertAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RInsert__Group__1__Impl
	rule__RInsert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRInsertAccess().getPlusSignEqualsSignKeyword_1()); }
	'+='
	{ after(grammarAccess.getRInsertAccess().getPlusSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RInsert__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRInsertAccess().getExpAssignment_2()); }
	(rule__RInsert__ExpAssignment_2)
	{ after(grammarAccess.getRInsertAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RRemove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRemove__Group__0__Impl
	rule__RRemove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRemoveAccess().getTargetAssignment_0()); }
	(rule__RRemove__TargetAssignment_0)
	{ after(grammarAccess.getRRemoveAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRemove__Group__1__Impl
	rule__RRemove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRemoveAccess().getHyphenMinusEqualsSignKeyword_1()); }
	'-='
	{ after(grammarAccess.getRRemoveAccess().getHyphenMinusEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RRemove__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRRemoveAccess().getExpAssignment_2()); }
	(rule__RRemove__ExpAssignment_2)
	{ after(grammarAccess.getRRemoveAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RForEach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__0__Impl
	rule__RForEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getRForEachAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__1__Impl
	rule__RForEach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRForEachAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__2__Impl
	rule__RForEach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getIteratorAssignment_2()); }
	(rule__RForEach__IteratorAssignment_2)
	{ after(grammarAccess.getRForEachAccess().getIteratorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__3__Impl
	rule__RForEach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getRForEachAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__4__Impl
	rule__RForEach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getCollectionAssignment_4()); }
	(rule__RForEach__CollectionAssignment_4)
	{ after(grammarAccess.getRForEachAccess().getCollectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__5__Impl
	rule__RForEach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getRForEachAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RForEach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRForEachAccess().getBlockAssignment_6()); }
	(rule__RForEach__BlockAssignment_6)
	{ after(grammarAccess.getRForEachAccess().getBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RCollection__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCollection__Group_0__0__Impl
	rule__RCollection__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCollectionAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getRCollectionAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCollection__Group_0__1__Impl
	rule__RCollection__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCollectionAccess().getMinAssignment_0_1()); }
	(rule__RCollection__MinAssignment_0_1)
	{ after(grammarAccess.getRCollectionAccess().getMinAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCollection__Group_0__2__Impl
	rule__RCollection__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCollectionAccess().getFullStopFullStopKeyword_0_2()); }
	'..'
	{ after(grammarAccess.getRCollectionAccess().getFullStopFullStopKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCollection__Group_0__3__Impl
	rule__RCollection__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCollectionAccess().getMaxAssignment_0_3()); }
	(rule__RCollection__MaxAssignment_0_3)
	{ after(grammarAccess.getRCollectionAccess().getMaxAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCollection__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCollectionAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getRCollectionAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group__0__Impl
	rule__RBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getRBlockAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group__1__Impl
	rule__RBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group__2__Impl
	rule__RBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getGroup_2()); }
	(rule__RBlock__Group_2__0)?
	{ after(grammarAccess.getRBlockAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RBlock__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group_2__0__Impl
	rule__RBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getAlternatives_2_0()); }
	(rule__RBlock__Alternatives_2_0)
	{ after(grammarAccess.getRBlockAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getAlternatives_2_1()); }
	(rule__RBlock__Alternatives_2_1)*
	{ after(grammarAccess.getRBlockAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RBlock__Group_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group_2_0_0__0__Impl
	rule__RBlock__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getStatementsAssignment_2_0_0_0()); }
	(rule__RBlock__StatementsAssignment_2_0_0_0)
	{ after(grammarAccess.getRBlockAccess().getStatementsAssignment_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getSemicolonKeyword_2_0_0_1()); }
	';'
	{ after(grammarAccess.getRBlockAccess().getSemicolonKeyword_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RBlock__Group_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group_2_1_0__0__Impl
	rule__RBlock__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getStatementsAssignment_2_1_0_0()); }
	(rule__RBlock__StatementsAssignment_2_1_0_0)
	{ after(grammarAccess.getRBlockAccess().getStatementsAssignment_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RBlock__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__Group_2_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRBlockAccess().getSemicolonKeyword_2_1_0_1()); }
	';'
	{ after(grammarAccess.getRBlockAccess().getSemicolonKeyword_2_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RIf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group__0__Impl
	rule__RIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getRIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group__1__Impl
	rule__RIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRIfAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group__2__Impl
	rule__RIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getCondAssignment_2()); }
	(rule__RIf__CondAssignment_2)
	{ after(grammarAccess.getRIfAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group__3__Impl
	rule__RIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRIfAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group__4__Impl
	rule__RIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getThenAssignment_4()); }
	(rule__RIf__ThenAssignment_4)
	{ after(grammarAccess.getRIfAccess().getThenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getGroup_5()); }
	(rule__RIf__Group_5__0)?
	{ after(grammarAccess.getRIfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RIf__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group_5__0__Impl
	rule__RIf__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getRIfAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RIf__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRIfAccess().getAlternatives_5_1()); }
	(rule__RIf__Alternatives_5_1)
	{ after(grammarAccess.getRIfAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RWhile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RWhile__Group__0__Impl
	rule__RWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getRWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RWhile__Group__1__Impl
	rule__RWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRWhileAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRWhileAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RWhile__Group__2__Impl
	rule__RWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRWhileAccess().getCondAssignment_2()); }
	(rule__RWhile__CondAssignment_2)
	{ after(grammarAccess.getRWhileAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RWhile__Group__3__Impl
	rule__RWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRWhileAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRWhileAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RWhile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRWhileAccess().getBlockAssignment_4()); }
	(rule__RWhile__BlockAssignment_4)
	{ after(grammarAccess.getRWhileAccess().getBlockAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RSwitch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__0__Impl
	rule__RSwitch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getRSwitchAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__1__Impl
	rule__RSwitch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRSwitchAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__2__Impl
	rule__RSwitch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getGroup_2()); }
	(rule__RSwitch__Group_2__0)?
	{ after(grammarAccess.getRSwitchAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__3__Impl
	rule__RSwitch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getParamValAssignment_3()); }
	(rule__RSwitch__ParamValAssignment_3)
	{ after(grammarAccess.getRSwitchAccess().getParamValAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__4__Impl
	rule__RSwitch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRSwitchAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__5__Impl
	rule__RSwitch__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getRSwitchAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__6__Impl
	rule__RSwitch__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRSwitchAccess().getCasesAssignment_6()); }
		(rule__RSwitch__CasesAssignment_6)
		{ after(grammarAccess.getRSwitchAccess().getCasesAssignment_6()); }
	)
	(
		{ before(grammarAccess.getRSwitchAccess().getCasesAssignment_6()); }
		(rule__RSwitch__CasesAssignment_6)*
		{ after(grammarAccess.getRSwitchAccess().getCasesAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__7__Impl
	rule__RSwitch__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getDefaultKeyword_7()); }
	'default'
	{ after(grammarAccess.getRSwitchAccess().getDefaultKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__8__Impl
	rule__RSwitch__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getColonKeyword_8()); }
	':'
	{ after(grammarAccess.getRSwitchAccess().getColonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__9__Impl
	rule__RSwitch__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getOtherAssignment_9()); }
	(rule__RSwitch__OtherAssignment_9)
	{ after(grammarAccess.getRSwitchAccess().getOtherAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getRSwitchAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RSwitch__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group_2__0__Impl
	rule__RSwitch__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getParamNameAssignment_2_0()); }
	(rule__RSwitch__ParamNameAssignment_2_0)
	{ after(grammarAccess.getRSwitchAccess().getParamNameAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RSwitch__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRSwitchAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getRSwitchAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCase__Group__0__Impl
	rule__RCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCaseAccess().getGuardAssignment_0()); }
	(rule__RCase__GuardAssignment_0)?
	{ after(grammarAccess.getRCaseAccess().getGuardAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCase__Group__1__Impl
	rule__RCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCaseAccess().getGroup_1()); }
	(rule__RCase__Group_1__0)?
	{ after(grammarAccess.getRCaseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCase__Group__2__Impl
	rule__RCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCaseAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRCaseAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCaseAccess().getValueAssignment_3()); }
	(rule__RCase__ValueAssignment_3)
	{ after(grammarAccess.getRCaseAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RCase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCase__Group_1__0__Impl
	rule__RCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCaseAccess().getCaseKeyword_1_0()); }
	'case'
	{ after(grammarAccess.getRCaseAccess().getCaseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRCaseAccess().getMatchAssignment_1_1()); }
	(rule__RCase__MatchAssignment_1_1)
	{ after(grammarAccess.getRCaseAccess().getMatchAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNonLeftRecExpressionParserRuleCall_0()); }
	rulenonLeftRecExpression
	{ after(grammarAccess.getExpressionAccess().getNonLeftRecExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_1()); }
	(rule__Expression__Alternatives_1)*
	{ after(grammarAccess.getExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__0__Impl
	rule__Expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCallTargetAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getCallTargetAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__1__Impl
	rule__Expression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getExpressionAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__2__Impl
	rule__Expression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNameAssignment_1_0_2()); }
	(rule__Expression__NameAssignment_1_0_2)
	{ after(grammarAccess.getExpressionAccess().getNameAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__3__Impl
	rule__Expression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }
	'('
	{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__4__Impl
	rule__Expression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_0_4()); }
	(rule__Expression__Group_1_0_4__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
	')'
	{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_4__0__Impl
	rule__Expression__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getParamsAssignment_1_0_4_0()); }
	(rule__Expression__ParamsAssignment_1_0_4_0)
	{ after(grammarAccess.getExpressionAccess().getParamsAssignment_1_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_0_4_1()); }
	(rule__Expression__Group_1_0_4_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_4_1__0__Impl
	rule__Expression__Group_1_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCommaKeyword_1_0_4_1_0()); }
	','
	{ after(grammarAccess.getExpressionAccess().getCommaKeyword_1_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getParamsAssignment_1_0_4_1_1()); }
	(rule__Expression__ParamsAssignment_1_0_4_1_1)
	{ after(grammarAccess.getExpressionAccess().getParamsAssignment_1_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_1__0__Impl
	rule__Expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFeatureTargetAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getFeatureTargetAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_1__1__Impl
	rule__Expression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFullStopKeyword_1_1_1()); }
	'.'
	{ after(grammarAccess.getExpressionAccess().getFullStopKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getFeatureAssignment_1_1_2()); }
	(rule__Expression__FeatureAssignment_1_1_2)
	{ after(grammarAccess.getExpressionAccess().getFeatureAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2__0__Impl
	rule__Expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getApplyTargetAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getApplyTargetAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2__1__Impl
	rule__Expression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_1()); }
	'->'
	{ after(grammarAccess.getExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_1_2_2()); }
	(rule__Expression__Alternatives_1_2_2)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__0__Impl
	rule__Expression__Group_1_2_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNameAssignment_1_2_2_0_0()); }
	(rule__Expression__NameAssignment_1_2_2_0_0)
	{ after(grammarAccess.getExpressionAccess().getNameAssignment_1_2_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__1__Impl
	rule__Expression__Group_1_2_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2_2_0_1()); }
	'('
	{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__2__Impl
	rule__Expression__Group_1_2_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getVarNameAssignment_1_2_2_0_2()); }
	(rule__Expression__VarNameAssignment_1_2_2_0_2)
	{ after(grammarAccess.getExpressionAccess().getVarNameAssignment_1_2_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__3__Impl
	rule__Expression__Group_1_2_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_2_2_0_3()); }
	(rule__Expression__Group_1_2_2_0_3__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1_2_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__4__Impl
	rule__Expression__Group_1_2_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getVerticalLineKeyword_1_2_2_0_4()); }
	'|'
	{ after(grammarAccess.getExpressionAccess().getVerticalLineKeyword_1_2_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__5__Impl
	rule__Expression__Group_1_2_2_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLambdaAssignment_1_2_2_0_5()); }
	(rule__Expression__LambdaAssignment_1_2_2_0_5)
	{ after(grammarAccess.getExpressionAccess().getLambdaAssignment_1_2_2_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2_2_0_6()); }
	')'
	{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2_2_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2_2_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0_3__0__Impl
	rule__Expression__Group_1_2_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getColonKeyword_1_2_2_0_3_0()); }
	':'
	{ after(grammarAccess.getExpressionAccess().getColonKeyword_1_2_2_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getVarTypeAssignment_1_2_2_0_3_1()); }
	(rule__Expression__VarTypeAssignment_1_2_2_0_3_1)
	{ after(grammarAccess.getExpressionAccess().getVarTypeAssignment_1_2_2_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1__0__Impl
	rule__Expression__Group_1_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNameAssignment_1_2_2_1_0()); }
	(rule__Expression__NameAssignment_1_2_2_1_0)
	{ after(grammarAccess.getExpressionAccess().getNameAssignment_1_2_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1__1__Impl
	rule__Expression__Group_1_2_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2_2_1_1()); }
	'('
	{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_2_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1__2__Impl
	rule__Expression__Group_1_2_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_2_2_1_2()); }
	(rule__Expression__Group_1_2_2_1_2__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1_2_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2_2_1_3()); }
	')'
	{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1_2__0__Impl
	rule__Expression__Group_1_2_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getParamsAssignment_1_2_2_1_2_0()); }
	(rule__Expression__ParamsAssignment_1_2_2_1_2_0)
	{ after(grammarAccess.getExpressionAccess().getParamsAssignment_1_2_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_2_2_1_2_1()); }
	(rule__Expression__Group_1_2_2_1_2_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1_2_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2_2_1_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1_2_1__0__Impl
	rule__Expression__Group_1_2_2_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCommaKeyword_1_2_2_1_2_1_0()); }
	','
	{ after(grammarAccess.getExpressionAccess().getCommaKeyword_1_2_2_1_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_2_2_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2_2_1_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getParamsAssignment_1_2_2_1_2_1_1()); }
	(rule__Expression__ParamsAssignment_1_2_2_1_2_1_1)
	{ after(grammarAccess.getExpressionAccess().getParamsAssignment_1_2_2_1_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_3__0__Impl
	rule__Expression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getMultLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getMultLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_3__1__Impl
	rule__Expression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOpAssignment_1_3_1()); }
	(rule__Expression__OpAssignment_1_3_1)
	{ after(grammarAccess.getExpressionAccess().getOpAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_3_2()); }
	(rule__Expression__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__0__Impl
	rule__Expression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAddLeftAction_1_4_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getAddLeftAction_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__1__Impl
	rule__Expression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOpAssignment_1_4_1()); }
	(rule__Expression__OpAssignment_1_4_1)
	{ after(grammarAccess.getExpressionAccess().getOpAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_4_2()); }
	(rule__Expression__RightAssignment_1_4_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_5__0__Impl
	rule__Expression__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCompLeftAction_1_5_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getCompLeftAction_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_5__1__Impl
	rule__Expression__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOpAssignment_1_5_1()); }
	(rule__Expression__OpAssignment_1_5_1)
	{ after(grammarAccess.getExpressionAccess().getOpAssignment_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_5_2()); }
	(rule__Expression__RightAssignment_1_5_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_6__0__Impl
	rule__Expression__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAndLeftAction_1_6_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getAndLeftAction_1_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_6__1__Impl
	rule__Expression__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAndKeyword_1_6_1()); }
	'and'
	{ after(grammarAccess.getExpressionAccess().getAndKeyword_1_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_6_2()); }
	(rule__Expression__RightAssignment_1_6_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_7__0__Impl
	rule__Expression__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOrLeftAction_1_7_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getOrLeftAction_1_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_7__1__Impl
	rule__Expression__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOrKeyword_1_7_1()); }
	'or'
	{ after(grammarAccess.getExpressionAccess().getOrKeyword_1_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_7_2()); }
	(rule__Expression__RightAssignment_1_7_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_8__0__Impl
	rule__Expression__Group_1_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getXorLeftAction_1_8_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getXorLeftAction_1_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_8__1__Impl
	rule__Expression__Group_1_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getXorKeyword_1_8_1()); }
	'xor'
	{ after(grammarAccess.getExpressionAccess().getXorKeyword_1_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_8_2()); }
	(rule__Expression__RightAssignment_1_8_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_9__0__Impl
	rule__Expression__Group_1_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getImplieLeftAction_1_9_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getImplieLeftAction_1_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_9__1__Impl
	rule__Expression__Group_1_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getImplieKeyword_1_9_1()); }
	'implie'
	{ after(grammarAccess.getExpressionAccess().getImplieKeyword_1_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_9_2()); }
	(rule__Expression__RightAssignment_1_9_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_0__0__Impl
	rule__NonLeftRecExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getNotAction_0_0()); }
	()
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getNotAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_0__1__Impl
	rule__NonLeftRecExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getNotKeyword_0_1()); }
	'not'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpAssignment_0_2()); }
	(rule__NonLeftRecExpression__ExpAssignment_0_2)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_1__0__Impl
	rule__NonLeftRecExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getMinAction_1_0()); }
	()
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getMinAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_1__1__Impl
	rule__NonLeftRecExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getHyphenMinusKeyword_1_1()); }
	'-'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpAssignment_1_2()); }
	(rule__NonLeftRecExpression__ExpAssignment_1_2)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_2__0__Impl
	rule__NonLeftRecExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getVarRefAction_2_0()); }
	()
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getVarRefAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getIDAssignment_2_1()); }
	(rule__NonLeftRecExpression__IDAssignment_2_1)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getIDAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_3__0__Impl
	rule__NonLeftRecExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getLitAction_3_0()); }
	()
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getLitAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getLiteralAssignment_3_1()); }
	(rule__NonLeftRecExpression__LiteralAssignment_3_1)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getLiteralAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_4__0__Impl
	rule__NonLeftRecExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_4__1__Impl
	rule__NonLeftRecExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpressionParserRuleCall_4_1()); }
	ruleexpression
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__0__Impl
	rule__NonLeftRecExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getConditionalAction_5_0()); }
	()
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getConditionalAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__1__Impl
	rule__NonLeftRecExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getIfKeyword_5_1()); }
	'if'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getIfKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__2__Impl
	rule__NonLeftRecExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getCondAssignment_5_2()); }
	(rule__NonLeftRecExpression__CondAssignment_5_2)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getCondAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__3__Impl
	rule__NonLeftRecExpression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getThenKeyword_5_3()); }
	'then'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getThenKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__4__Impl
	rule__NonLeftRecExpression__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getThenAssignment_5_4()); }
	(rule__NonLeftRecExpression__ThenAssignment_5_4)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getThenAssignment_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__5__Impl
	rule__NonLeftRecExpression__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getElseKeyword_5_5()); }
	'else'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getElseKeyword_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__6__Impl
	rule__NonLeftRecExpression__Group_5__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getElseAssignment_5_6()); }
	(rule__NonLeftRecExpression__ElseAssignment_5_6)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getElseAssignment_5_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_5__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_5__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getEndifKeyword_5_7()); }
	'endif'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getEndifKeyword_5_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6__0__Impl
	rule__NonLeftRecExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getLetAction_6_0()); }
	()
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getLetAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6__1__Impl
	rule__NonLeftRecExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getLetKeyword_6_1()); }
	'let'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getLetKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6__2__Impl
	rule__NonLeftRecExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getBindingsAssignment_6_2()); }
	(rule__NonLeftRecExpression__BindingsAssignment_6_2)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getBindingsAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6__3__Impl
	rule__NonLeftRecExpression__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getGroup_6_3()); }
	(rule__NonLeftRecExpression__Group_6_3__0)*
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6__4__Impl
	rule__NonLeftRecExpression__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getInKeyword_6_4()); }
	'in'
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getInKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpAssignment_6_5()); }
	(rule__NonLeftRecExpression__ExpAssignment_6_5)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpAssignment_6_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonLeftRecExpression__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6_3__0__Impl
	rule__NonLeftRecExpression__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getCommaKeyword_6_3_0()); }
	','
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonLeftRecExpression__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonLeftRecExpressionAccess().getBindingsAssignment_6_3_1()); }
	(rule__NonLeftRecExpression__BindingsAssignment_6_3_1)
	{ after(grammarAccess.getNonLeftRecExpressionAccess().getBindingsAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getNameAssignment_0()); }
	(rule__Binding__NameAssignment_0)
	{ after(grammarAccess.getBindingAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getGroup_1()); }
	(rule__Binding__Group_1__0)?
	{ after(grammarAccess.getBindingAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__2__Impl
	rule__Binding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getBindingAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getExpAssignment_3()); }
	(rule__Binding__ExpAssignment_3)
	{ after(grammarAccess.getBindingAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group_1__0__Impl
	rule__Binding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getBindingAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getTypeAssignment_1_1()); }
	(rule__Binding__TypeAssignment_1_1)
	{ after(grammarAccess.getBindingAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getStringAction_0_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getStringAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); }
	(rule__Literal__ValueAssignment_0_1)
	{ after(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getIntAction_1_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getIntAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); }
	(rule__Literal__ValueAssignment_1_1)
	{ after(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getRealAction_2_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getRealAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); }
	(rule__Literal__ValueAssignment_2_1)
	{ after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_3__0__Impl
	rule__Literal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getTrueAction_3_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getTrueAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getTrueKeyword_3_1()); }
	'true'
	{ after(grammarAccess.getLiteralAccess().getTrueKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_4__0__Impl
	rule__Literal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getFalseAction_4_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getFalseAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getFalseKeyword_4_1()); }
	'false'
	{ after(grammarAccess.getLiteralAccess().getFalseKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_5__0__Impl
	rule__Literal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getNullAction_5_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getNullAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getNullKeyword_5_1()); }
	'null'
	{ after(grammarAccess.getLiteralAccess().getNullKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6__0__Impl
	rule__Literal__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getSequenceAction_6_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getSequenceAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6__1__Impl
	rule__Literal__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getSequenceKeyword_6_1()); }
	'Sequence'
	{ after(grammarAccess.getLiteralAccess().getSequenceKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6__2__Impl
	rule__Literal__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLeftCurlyBracketKeyword_6_2()); }
	'{'
	{ after(grammarAccess.getLiteralAccess().getLeftCurlyBracketKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6__3__Impl
	rule__Literal__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_6_3()); }
	(rule__Literal__Group_6_3__0)?
	{ after(grammarAccess.getLiteralAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_6_4()); }
	'}'
	{ after(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6_3__0__Impl
	rule__Literal__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getParamsAssignment_6_3_0()); }
	(rule__Literal__ParamsAssignment_6_3_0)
	{ after(grammarAccess.getLiteralAccess().getParamsAssignment_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_6_3_1()); }
	(rule__Literal__Group_6_3_1__0)*
	{ after(grammarAccess.getLiteralAccess().getGroup_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6_3_1__0__Impl
	rule__Literal__Group_6_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getCommaKeyword_6_3_1_0()); }
	','
	{ after(grammarAccess.getLiteralAccess().getCommaKeyword_6_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_6_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getParamsAssignment_6_3_1_1()); }
	(rule__Literal__ParamsAssignment_6_3_1_1)
	{ after(grammarAccess.getLiteralAccess().getParamsAssignment_6_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7__0__Impl
	rule__Literal__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getOrderedSetAction_7_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getOrderedSetAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7__1__Impl
	rule__Literal__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getOrderedSetKeyword_7_1()); }
	'OrderedSet'
	{ after(grammarAccess.getLiteralAccess().getOrderedSetKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7__2__Impl
	rule__Literal__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getLeftCurlyBracketKeyword_7_2()); }
	'{'
	{ after(grammarAccess.getLiteralAccess().getLeftCurlyBracketKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7__3__Impl
	rule__Literal__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_7_3()); }
	(rule__Literal__Group_7_3__0)?
	{ after(grammarAccess.getLiteralAccess().getGroup_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_7_4()); }
	'}'
	{ after(grammarAccess.getLiteralAccess().getRightCurlyBracketKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_7_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7_3__0__Impl
	rule__Literal__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getParamsAssignment_7_3_0()); }
	(rule__Literal__ParamsAssignment_7_3_0)
	{ after(grammarAccess.getLiteralAccess().getParamsAssignment_7_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_7_3_1()); }
	(rule__Literal__Group_7_3_1__0)*
	{ after(grammarAccess.getLiteralAccess().getGroup_7_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_7_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7_3_1__0__Impl
	rule__Literal__Group_7_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getCommaKeyword_7_3_1_0()); }
	','
	{ after(grammarAccess.getLiteralAccess().getCommaKeyword_7_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_7_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getParamsAssignment_7_3_1_1()); }
	(rule__Literal__ParamsAssignment_7_3_1_1)
	{ after(grammarAccess.getLiteralAccess().getParamsAssignment_7_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_8__0__Impl
	rule__Literal__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getEnumAction_8_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getEnumAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_8__1__Impl
	rule__Literal__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getIdentTerminalRuleCall_8_1()); }
	RULE_IDENT
	{ after(grammarAccess.getLiteralAccess().getIdentTerminalRuleCall_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_8__2__Impl
	rule__Literal__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getColonColonKeyword_8_2()); }
	'::'
	{ after(grammarAccess.getLiteralAccess().getColonColonKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_8__3__Impl
	rule__Literal__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getIdentTerminalRuleCall_8_3()); }
	RULE_IDENT
	{ after(grammarAccess.getLiteralAccess().getIdentTerminalRuleCall_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_8__4__Impl
	rule__Literal__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getColonColonKeyword_8_4()); }
	'::'
	{ after(grammarAccess.getLiteralAccess().getColonColonKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_8__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_8__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getIdentTerminalRuleCall_8_5()); }
	RULE_IDENT
	{ after(grammarAccess.getLiteralAccess().getIdentTerminalRuleCall_8_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_0__0__Impl
	rule__TypeLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getStringTypeAction_0_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getStringTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getStringKeyword_0_1()); }
	'String'
	{ after(grammarAccess.getTypeLiteralAccess().getStringKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_1__0__Impl
	rule__TypeLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getIntTypeAction_1_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getIntTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getIntegerKeyword_1_1()); }
	'Integer'
	{ after(grammarAccess.getTypeLiteralAccess().getIntegerKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_2__0__Impl
	rule__TypeLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getRealTypeAction_2_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getRealTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getRealKeyword_2_1()); }
	'Real'
	{ after(grammarAccess.getTypeLiteralAccess().getRealKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_3__0__Impl
	rule__TypeLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getBoolTypeAction_3_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getBoolTypeAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getBooleanKeyword_3_1()); }
	'Boolean'
	{ after(grammarAccess.getTypeLiteralAccess().getBooleanKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_4__0__Impl
	rule__TypeLiteral__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getSeqTypeAction_4_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getSeqTypeAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_4__1__Impl
	rule__TypeLiteral__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getSequenceKeyword_4_1()); }
	'Sequence'
	{ after(grammarAccess.getTypeLiteralAccess().getSequenceKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_4__2__Impl
	rule__TypeLiteral__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getLeftParenthesisKeyword_4_2()); }
	'('
	{ after(grammarAccess.getTypeLiteralAccess().getLeftParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_4__3__Impl
	rule__TypeLiteral__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getTypeAssignment_4_3()); }
	(rule__TypeLiteral__TypeAssignment_4_3)
	{ after(grammarAccess.getTypeLiteralAccess().getTypeAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getTypeLiteralAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_5__0__Impl
	rule__TypeLiteral__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getSetTypeAction_5_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getSetTypeAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_5__1__Impl
	rule__TypeLiteral__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getOrderedSetKeyword_5_1()); }
	'OrderedSet'
	{ after(grammarAccess.getTypeLiteralAccess().getOrderedSetKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_5__2__Impl
	rule__TypeLiteral__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getLeftParenthesisKeyword_5_2()); }
	'('
	{ after(grammarAccess.getTypeLiteralAccess().getLeftParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_5__3__Impl
	rule__TypeLiteral__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getTypeAssignment_5_3()); }
	(rule__TypeLiteral__TypeAssignment_5_3)
	{ after(grammarAccess.getTypeLiteralAccess().getTypeAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getRightParenthesisKeyword_5_4()); }
	')'
	{ after(grammarAccess.getTypeLiteralAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7__0__Impl
	rule__TypeLiteral__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getClassifierSetTypeAction_7_0()); }
	()
	{ after(grammarAccess.getTypeLiteralAccess().getClassifierSetTypeAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7__1__Impl
	rule__TypeLiteral__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getLeftCurlyBracketKeyword_7_1()); }
	'{'
	{ after(grammarAccess.getTypeLiteralAccess().getLeftCurlyBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7__2__Impl
	rule__TypeLiteral__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getTypesAssignment_7_2()); }
	(rule__TypeLiteral__TypesAssignment_7_2)
	{ after(grammarAccess.getTypeLiteralAccess().getTypesAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7__3__Impl
	rule__TypeLiteral__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getGroup_7_3()); }
	(rule__TypeLiteral__Group_7_3__0)*
	{ after(grammarAccess.getTypeLiteralAccess().getGroup_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getRightCurlyBracketKeyword_7_4()); }
	'}'
	{ after(grammarAccess.getTypeLiteralAccess().getRightCurlyBracketKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeLiteral__Group_7_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7_3__0__Impl
	rule__TypeLiteral__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getVerticalLineKeyword_7_3_0()); }
	'|'
	{ after(grammarAccess.getTypeLiteralAccess().getVerticalLineKeyword_7_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeLiteral__Group_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Group_7_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeLiteralAccess().getTypesAssignment_7_3_1()); }
	(rule__TypeLiteral__TypesAssignment_7_3_1)
	{ after(grammarAccess.getTypeLiteralAccess().getTypesAssignment_7_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTypeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierTypeRule__Group__0__Impl
	rule__ClassifierTypeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierTypeRuleAccess().getClassifierTypeAction_0()); }
	()
	{ after(grammarAccess.getClassifierTypeRuleAccess().getClassifierTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierTypeRule__Group__1__Impl
	rule__ClassifierTypeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierTypeRuleAccess().getPackageNameAssignment_1()); }
	(rule__ClassifierTypeRule__PackageNameAssignment_1)
	{ after(grammarAccess.getClassifierTypeRuleAccess().getPackageNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierTypeRule__Group__2__Impl
	rule__ClassifierTypeRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierTypeRuleAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getClassifierTypeRuleAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierTypeRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierTypeRuleAccess().getClassNameAssignment_3()); }
	(rule__ClassifierTypeRule__ClassNameAssignment_3)
	{ after(grammarAccess.getClassifierTypeRuleAccess().getClassNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RQIdent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQIdent__Group__0__Impl
	rule__RQIdent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RQIdent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQIdentAccess().getIdentTerminalRuleCall_0()); }
	RULE_IDENT
	{ after(grammarAccess.getRQIdentAccess().getIdentTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RQIdent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQIdent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RQIdent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQIdentAccess().getGroup_1()); }
	(rule__RQIdent__Group_1__0)*
	{ after(grammarAccess.getRQIdentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RQIdent__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQIdent__Group_1__0__Impl
	rule__RQIdent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RQIdent__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQIdentAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getRQIdentAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RQIdent__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQIdent__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RQIdent__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQIdentAccess().getIdentTerminalRuleCall_1_1()); }
	RULE_IDENT
	{ after(grammarAccess.getRQIdentAccess().getIdentTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RQualified__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQualified__Group__0__Impl
	rule__RQualified__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RQualified__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQualifiedAccess().getIdentTerminalRuleCall_0()); }
	RULE_IDENT
	{ after(grammarAccess.getRQualifiedAccess().getIdentTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RQualified__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQualified__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RQualified__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQualifiedAccess().getGroup_1()); }
	(rule__RQualified__Group_1__0)*
	{ after(grammarAccess.getRQualifiedAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RQualified__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQualified__Group_1__0__Impl
	rule__RQualified__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RQualified__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQualifiedAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getRQualifiedAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RQualified__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RQualified__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RQualified__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRQualifiedAccess().getIdentTerminalRuleCall_1_1()); }
	RULE_IDENT
	{ after(grammarAccess.getRQualifiedAccess().getIdentTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RRoot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRRootAccess().getNameRQualifiedParserRuleCall_1_0()); }
		rulerQualified
		{ after(grammarAccess.getRRootAccess().getNameRQualifiedParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRRootAccess().getImportsRImportParserRuleCall_3_0()); }
		rulerImport
		{ after(grammarAccess.getRRootAccess().getImportsRImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__ServicesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRRootAccess().getServicesRServiceParserRuleCall_4_0()); }
		rulerService
		{ after(grammarAccess.getRRootAccess().getServicesRServiceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRoot__XtendedClassesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRRootAccess().getXtendedClassesRClassParserRuleCall_5_0()); }
		rulerClass
		{ after(grammarAccess.getRRootAccess().getXtendedClassesRClassParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRImportAccess().getNameRQualifiedParserRuleCall_1_0()); }
		rulerQualified
		{ after(grammarAccess.getRImportAccess().getNameRQualifiedParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RImport__AliasAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRImportAccess().getAliasIdentTerminalRuleCall_3_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRImportAccess().getAliasIdentTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RService__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRServiceAccess().getNameRQualifiedParserRuleCall_1_0()); }
		rulerQualified
		{ after(grammarAccess.getRServiceAccess().getNameRQualifiedParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROpenClassAccess().getNameRQualifiedParserRuleCall_2_0()); }
		rulerQualified
		{ after(grammarAccess.getROpenClassAccess().getNameRQualifiedParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__ExtendsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROpenClassAccess().getExtendsRQualifiedParserRuleCall_3_1_0()); }
		rulerQualified
		{ after(grammarAccess.getROpenClassAccess().getExtendsRQualifiedParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__ExtendsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROpenClassAccess().getExtendsRQualifiedParserRuleCall_3_2_1_0()); }
		rulerQualified
		{ after(grammarAccess.getROpenClassAccess().getExtendsRQualifiedParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROpenClassAccess().getAttributesRAttributeParserRuleCall_5_0()); }
		rulerAttribute
		{ after(grammarAccess.getROpenClassAccess().getAttributesRAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpenClass__OperationsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROpenClassAccess().getOperationsROperationParserRuleCall_6_0()); }
		rulerOperation
		{ after(grammarAccess.getROpenClassAccess().getOperationsROperationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNewClassAccess().getNameIdentTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRNewClassAccess().getNameIdentTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNewClassAccess().getAttributesRAttributeParserRuleCall_3_0()); }
		rulerAttribute
		{ after(grammarAccess.getRNewClassAccess().getAttributesRAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RNewClass__OperationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRNewClassAccess().getOperationsROperationParserRuleCall_4_0()); }
		rulerOperation
		{ after(grammarAccess.getRNewClassAccess().getOperationsROperationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__TagAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getTagRTagParserRuleCall_0_0()); }
		rulerTag
		{ after(grammarAccess.getROperationAccess().getTagRTagParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getTypeRTypeParserRuleCall_2_0()); }
		rulerType
		{ after(grammarAccess.getROperationAccess().getTypeRTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getNameIdentTerminalRuleCall_3_0()); }
		RULE_IDENT
		{ after(grammarAccess.getROperationAccess().getNameIdentTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__ParamsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getParamsRVariableParserRuleCall_5_0_0()); }
		rulerVariable
		{ after(grammarAccess.getROperationAccess().getParamsRVariableParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__ParamsAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getParamsRVariableParserRuleCall_5_1_1_0()); }
		rulerVariable
		{ after(grammarAccess.getROperationAccess().getParamsRVariableParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROperation__BodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROperationAccess().getBodyRBlockParserRuleCall_7_0()); }
		rulerBlock
		{ after(grammarAccess.getROperationAccess().getBodyRBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RTag__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRTagAccess().getNameIdentTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRTagAccess().getNameIdentTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVariable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRVariableAccess().getTypeRTypeParserRuleCall_0_0()); }
		rulerType
		{ after(grammarAccess.getRVariableAccess().getTypeRTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRVariableAccess().getNameIdentTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRVariableAccess().getNameIdentTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__ModifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getModifierAlternatives_0_0()); }
		(rule__RAttribute__ModifierAlternatives_0_0)
		{ after(grammarAccess.getRAttributeAccess().getModifierAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__BoundsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getBoundsRCardinalityParserRuleCall_1_0()); }
		rulerCardinality
		{ after(grammarAccess.getRAttributeAccess().getBoundsRCardinalityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__OppositeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getOppositeROppositeParserRuleCall_2_0()); }
		rulerOpposite
		{ after(grammarAccess.getRAttributeAccess().getOppositeROppositeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getTypeRTypeParserRuleCall_3_0()); }
		rulerType
		{ after(grammarAccess.getRAttributeAccess().getTypeRTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getNameIdentTerminalRuleCall_4_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRAttributeAccess().getNameIdentTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAttribute__ExpAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAttributeAccess().getExpRExpressionParserRuleCall_5_1_0()); }
		rulerExpression
		{ after(grammarAccess.getRAttributeAccess().getExpRExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ROpposite__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getROppositeAccess().getNameIdentTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getROppositeAccess().getNameIdentTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRVarDeclAccess().getTypeRTypeParserRuleCall_0_0()); }
		rulerType
		{ after(grammarAccess.getRVarDeclAccess().getTypeRTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRVarDeclAccess().getNameIdentTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRVarDeclAccess().getNameIdentTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RVarDecl__ExpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRVarDeclAccess().getExpRExpressionParserRuleCall_2_1_0()); }
		rulerExpression
		{ after(grammarAccess.getRVarDeclAccess().getExpRExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAssignAccess().getTargetExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getRAssignAccess().getTargetExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RAssign__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRAssignAccess().getExpRExpressionParserRuleCall_2_0()); }
		rulerExpression
		{ after(grammarAccess.getRAssignAccess().getExpRExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRInsertAccess().getTargetExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getRInsertAccess().getTargetExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RInsert__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRInsertAccess().getExpRExpressionParserRuleCall_2_0()); }
		rulerExpression
		{ after(grammarAccess.getRInsertAccess().getExpRExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRRemoveAccess().getTargetExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getRRemoveAccess().getTargetExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RRemove__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRRemoveAccess().getExpRExpressionParserRuleCall_2_0()); }
		rulerExpression
		{ after(grammarAccess.getRRemoveAccess().getExpRExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__IteratorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRForEachAccess().getIteratorIdentTerminalRuleCall_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRForEachAccess().getIteratorIdentTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__CollectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRForEachAccess().getCollectionRCollectionParserRuleCall_4_0()); }
		rulerCollection
		{ after(grammarAccess.getRForEachAccess().getCollectionRCollectionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RForEach__BlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRForEachAccess().getBlockRBlockParserRuleCall_6_0()); }
		rulerBlock
		{ after(grammarAccess.getRForEachAccess().getBlockRBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__MinAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCollectionAccess().getMinINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRCollectionAccess().getMinINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__MaxAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCollectionAccess().getMaxINTTerminalRuleCall_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getRCollectionAccess().getMaxINTTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCollection__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCollectionAccess().getExpRExpressionParserRuleCall_1_0()); }
		rulerExpression
		{ after(grammarAccess.getRCollectionAccess().getExpRExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__StatementsAssignment_2_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_0_0_0_0()); }
		rulerSimpleStatement
		{ after(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__StatementsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_0_1_0()); }
		rulerBlockStatement
		{ after(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__StatementsAssignment_2_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_1_0_0_0()); }
		rulerSimpleStatement
		{ after(grammarAccess.getRBlockAccess().getStatementsRSimpleStatementParserRuleCall_2_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RBlock__StatementsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_1_1_0()); }
		rulerBlockStatement
		{ after(grammarAccess.getRBlockAccess().getStatementsRBlockStatementParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRIfAccess().getCondRExpressionParserRuleCall_2_0()); }
		rulerExpression
		{ after(grammarAccess.getRIfAccess().getCondRExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__ThenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRIfAccess().getThenRBlockParserRuleCall_4_0()); }
		rulerBlock
		{ after(grammarAccess.getRIfAccess().getThenRBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__ElseAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRIfAccess().getElseRBlockParserRuleCall_5_1_0_0()); }
		rulerBlock
		{ after(grammarAccess.getRIfAccess().getElseRBlockParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RIf__NestedIfAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRIfAccess().getNestedIfRIfParserRuleCall_5_1_1_0()); }
		rulerIf
		{ after(grammarAccess.getRIfAccess().getNestedIfRIfParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRWhileAccess().getCondRExpressionParserRuleCall_2_0()); }
		rulerExpression
		{ after(grammarAccess.getRWhileAccess().getCondRExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RWhile__BlockAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRWhileAccess().getBlockRBlockParserRuleCall_4_0()); }
		rulerBlock
		{ after(grammarAccess.getRWhileAccess().getBlockRBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__ParamNameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRSwitchAccess().getParamNameIdentTerminalRuleCall_2_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getRSwitchAccess().getParamNameIdentTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__ParamValAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRSwitchAccess().getParamValRExpressionParserRuleCall_3_0()); }
		rulerExpression
		{ after(grammarAccess.getRSwitchAccess().getParamValRExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__CasesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRSwitchAccess().getCasesRCaseParserRuleCall_6_0()); }
		rulerCase
		{ after(grammarAccess.getRSwitchAccess().getCasesRCaseParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RSwitch__OtherAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRSwitchAccess().getOtherRExpressionParserRuleCall_9_0()); }
		rulerExpression
		{ after(grammarAccess.getRSwitchAccess().getOtherRExpressionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__GuardAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCaseAccess().getGuardRTypeParserRuleCall_0_0()); }
		rulerType
		{ after(grammarAccess.getRCaseAccess().getGuardRTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__MatchAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCaseAccess().getMatchRExpressionParserRuleCall_1_1_0()); }
		rulerExpression
		{ after(grammarAccess.getRCaseAccess().getMatchRExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RCase__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRCaseAccess().getValueRExpressionParserRuleCall_3_0()); }
		rulerExpression
		{ after(grammarAccess.getRCaseAccess().getValueRExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RExpression__ExpAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRExpressionAccess().getExpAlternatives_0()); }
		(rule__RExpression__ExpAlternatives_0)
		{ after(grammarAccess.getRExpressionAccess().getExpAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNameIdentTerminalRuleCall_1_0_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getExpressionAccess().getNameIdentTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ParamsAssignment_1_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_0_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ParamsAssignment_1_0_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__FeatureAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getFeatureIdentTerminalRuleCall_1_1_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getExpressionAccess().getFeatureIdentTerminalRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_1_2_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNameCollectionIteratorParserRuleCall_1_2_2_0_0_0()); }
		rulecollectionIterator
		{ after(grammarAccess.getExpressionAccess().getNameCollectionIteratorParserRuleCall_1_2_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__VarNameAssignment_1_2_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getVarNameIdentTerminalRuleCall_1_2_2_0_2_0()); }
		RULE_IDENT
		{ after(grammarAccess.getExpressionAccess().getVarNameIdentTerminalRuleCall_1_2_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__VarTypeAssignment_1_2_2_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getVarTypeTypeLiteralParserRuleCall_1_2_2_0_3_1_0()); }
		ruletypeLiteral
		{ after(grammarAccess.getExpressionAccess().getVarTypeTypeLiteralParserRuleCall_1_2_2_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LambdaAssignment_1_2_2_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getLambdaExpressionParserRuleCall_1_2_2_0_5_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getLambdaExpressionParserRuleCall_1_2_2_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_1_2_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNameIdentTerminalRuleCall_1_2_2_1_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getExpressionAccess().getNameIdentTerminalRuleCall_1_2_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ParamsAssignment_1_2_2_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_0_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ParamsAssignment_1_2_2_1_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getParamsExpressionParserRuleCall_1_2_2_1_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OpAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOpMultOpTerminalRuleCall_1_3_1_0()); }
		RULE_MULTOP
		{ after(grammarAccess.getExpressionAccess().getOpMultOpTerminalRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_3_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OpAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOpAddOpParserRuleCall_1_4_1_0()); }
		ruleaddOp
		{ after(grammarAccess.getExpressionAccess().getOpAddOpParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_4_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OpAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOpCompOpParserRuleCall_1_5_1_0()); }
		rulecompOp
		{ after(grammarAccess.getExpressionAccess().getOpCompOpParserRuleCall_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_5_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_6_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_7_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_8_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_9_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__ExpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_0_2_0()); }
		ruleexpression
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__ExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_1_2_0()); }
		ruleexpression
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__IDAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getIDIdentTerminalRuleCall_2_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getIDIdentTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__LiteralAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getLiteralLiteralParserRuleCall_3_1_0()); }
		ruleliteral
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getLiteralLiteralParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__CondAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getCondExpressionParserRuleCall_5_2_0()); }
		ruleexpression
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getCondExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__ThenAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getThenExpressionParserRuleCall_5_4_0()); }
		ruleexpression
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getThenExpressionParserRuleCall_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__ElseAssignment_5_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getElseExpressionParserRuleCall_5_6_0()); }
		ruleexpression
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getElseExpressionParserRuleCall_5_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__BindingsAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getBindingsBindingParserRuleCall_6_2_0()); }
		rulebinding
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getBindingsBindingParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__BindingsAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getBindingsBindingParserRuleCall_6_3_1_0()); }
		rulebinding
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getBindingsBindingParserRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonLeftRecExpression__ExpAssignment_6_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_6_5_0()); }
		ruleexpression
		{ after(grammarAccess.getNonLeftRecExpressionAccess().getExpExpressionParserRuleCall_6_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getNameIdentTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getBindingAccess().getNameIdentTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getTypeTypeLiteralParserRuleCall_1_1_0()); }
		ruletypeLiteral
		{ after(grammarAccess.getBindingAccess().getTypeTypeLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getExpExpressionParserRuleCall_3_0()); }
		ruleexpression
		{ after(grammarAccess.getBindingAccess().getExpExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValueRealTerminalRuleCall_2_1_0()); }
		RULE_REAL
		{ after(grammarAccess.getLiteralAccess().getValueRealTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParamsAssignment_6_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_6_3_0_0()); }
		ruleexpression
		{ after(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_6_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParamsAssignment_6_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_6_3_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_6_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParamsAssignment_7_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_7_3_0_0()); }
		ruleexpression
		{ after(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_7_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ParamsAssignment_7_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_7_3_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getLiteralAccess().getParamsExpressionParserRuleCall_7_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__TypeAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getTypeTypeLiteralParserRuleCall_4_3_0()); }
		ruletypeLiteral
		{ after(grammarAccess.getTypeLiteralAccess().getTypeTypeLiteralParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__TypeAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getTypeTypeLiteralParserRuleCall_5_3_0()); }
		ruletypeLiteral
		{ after(grammarAccess.getTypeLiteralAccess().getTypeTypeLiteralParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__TypesAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getTypesClassifierTypeRuleParserRuleCall_7_2_0()); }
		ruleclassifierTypeRule
		{ after(grammarAccess.getTypeLiteralAccess().getTypesClassifierTypeRuleParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__TypesAssignment_7_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getTypesClassifierTypeRuleParserRuleCall_7_3_1_0()); }
		ruleclassifierTypeRule
		{ after(grammarAccess.getTypeLiteralAccess().getTypesClassifierTypeRuleParserRuleCall_7_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__PackageNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierTypeRuleAccess().getPackageNameIdentTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getClassifierTypeRuleAccess().getPackageNameIdentTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRule__ClassNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierTypeRuleAccess().getClassNameIdentTerminalRuleCall_3_0()); }
		RULE_IDENT
		{ after(grammarAccess.getClassifierTypeRuleAccess().getClassNameIdentTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRTypeAccess().getNameRQIdentParserRuleCall_1_0()); }
		rulerQIdent
		{ after(grammarAccess.getRTypeAccess().getNameRQIdentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_MULTOP : ('*'|'/');

RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_IDENT : (RULE_LETTER|'_') (RULE_LETTER|'0'..'9'|'_')*;

fragment RULE_LETTER : ('a'..'z'|'A'..'Z');

RULE_STRING : '\'' ('\\' .|~(('\\'|'\'')))* '\'';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
